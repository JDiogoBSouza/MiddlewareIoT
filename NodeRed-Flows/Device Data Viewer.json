[{"id":"7e83adea.572ee4","type":"tab","label":"Device Data Viewer","disabled":false,"info":""},{"id":"eadb4d0d.02e9f","type":"ui_template","z":"7e83adea.572ee4","group":"5b8c848f.6cd91c","name":"Sensors","order":1,"width":"8","height":"3","format":"<!--\n  cria uma tabela com os sensores e um botão\n  quando o botão é pressionado o template envia\n  o nome do sensor como payload. Esse valor\n  é usado para preencher a tabela de dados\n-->\n<style>\n    table, th, td {\n      border-bottom: 1px solid #ccc;\n      border-collapse: collapse;\n    }\n    tr:hover {\n      background-color: #000022;\n    }\n    th {\n      text-align: left;\n    }\n</style>\n\n<table>\n  <tr>\n    <th>Sensor</th>\n    <th>Visualizar</th> \n  </tr>\n  <tr ng-repeat=\"x in msg.payload[0].sensores\">\n    <td>{{x}}</td>\n    <td>\n        <md-button style=\"margin: 0px 0px 0px 0px;\" ng-click=\"send({payload: {view:'table', 'sensor':x}})\">Tabela</md-button>\n        <md-button style=\"margin: 0px 0px 0px 0px;\" ng-click=\"send({payload: {view:'graph', 'sensor':x}})\">Grafico</md-button>\n    </td>\n  </tr>\n</table>","storeOutMessages":false,"fwdInMessages":false,"templateScope":"local","x":742.9999847412109,"y":326.66666889190674,"wires":[["95df926.c31ea7"]]},{"id":"76fdde5c.af0fd","type":"ui_ui_control","z":"7e83adea.572ee4","name":"","x":165,"y":233.33333778381348,"wires":[["2a30956d.025fca"]]},{"id":"2a30956d.025fca","type":"function","z":"7e83adea.572ee4","name":"Device Data?","func":"\nmsg.status = 0;\n\n/*testa se a tela corrente é a Device Data*/\nvar screen = global.get(\"screen\");\n\nif (screen == \"Device Data\"){\n    msg.status = 1;\n    msg.payload = {};\n    msg.payload.deviceId = global.get(\"selectedDev\").deviceId;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":185,"y":333.3333377838135,"wires":[["56f5ee15.1a20a"]]},{"id":"56f5ee15.1a20a","type":"switch","z":"7e83adea.572ee4","name":"update?","property":"status","propertyType":"msg","rules":[{"t":"eq","v":"1","vt":"str"},{"t":"eq","v":"0","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":383.33331871032715,"y":333.3333168029785,"wires":[["4f55f867.d224d8"],[]]},{"id":"4f55f867.d224d8","type":"mongodb in","z":"7e83adea.572ee4","mongodb":"8f5cdd6d.e744d","name":"find dispositivos","collection":"dispositivos","operation":"find","x":558.3332672119141,"y":326.6666507720947,"wires":[["eadb4d0d.02e9f"]]},{"id":"c68c7fbe.923d9","type":"ui_chart","z":"7e83adea.572ee4","name":"","group":"de982014.b18f5","order":1,"width":0,"height":0,"label":"chart","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"5","removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":1751.6664276123047,"y":271.6666350364685,"wires":[[]]},{"id":"441d959c.448f9c","type":"mongodb in","z":"7e83adea.572ee4","mongodb":"8f5cdd6d.e744d","name":"find data","collection":"dados","operation":"find","x":1314.999912261963,"y":248.33329057693481,"wires":[["84bbdbdb.4b6418","36c5755.2fee38a"]]},{"id":"2dce755f.91edca","type":"function","z":"7e83adea.572ee4","name":"Device Data?","func":"\n/*\n    para retornar todos os dados relacionados a um sensor\n    usamos o device token e selecionamos o campo\n    que queremos que o banco retorne.\n    EX: db.dados.find({deviceToken :\"token\"}, {sensor:1})\n    \n    No caso de um array, se quremos que o banco retorne\n    apenas alguns elmentos do array de dados do sensor\n    fazemos\n    EX: \n    db.dados.find({deviceToken :\"token\"}, {sensor: {$slice : 20}}) //20 primeiros\n    db.dados.find({deviceToken :\"token\"}, {sensor: {$slice : -20}}) //20 ultimos\n    db.dados.find({deviceToken :\"token\"}, {sensor: {$slice : [20, 20]}}) //janela de 20 elementos, ignorando os 20 primeiros\n    \n*/\nsensor = msg.payload.sensor;\nflow.set(\"seletectSensor\", sensor);\n\nselectedDev = global.get(\"selectedDev\");\n\nmsg.payload = {};\nmsg.payload.deviceToken = selectedDev.deviceToken;\n\n// usado para filtrar o resultado\nmsg.projection = {};\n// remove todos os outros sensores da query\nfor (i =0; i<selectedDev.sensores.length; i++)\n    msg.projection[selectedDev.sensores[i]] = 0;\n// filtra apenas o sensor especifico\nmsg.projection[sensor] = {};\n\n// limita o tamanho do vetor de dados\nmsg.projection[sensor][\"$slice\"] = 100;\n\nreturn msg;","outputs":1,"noerr":0,"x":1109.999984741211,"y":247.99996089935303,"wires":[["441d959c.448f9c","a0ffbe4e.afe29"]]},{"id":"84bbdbdb.4b6418","type":"function","z":"7e83adea.572ee4","name":"Create Chart","func":"selectedSensor = flow.get(\"seletectSensor\");\nsensorData = msg.payload[0][selectedSensor]\n\nmsg1={};\nmsg2={};\nif(sensorData.length > 1){\n    /*exibe o gráfico*/\n    msg1.payload = {group:{ show:[\"Device_Data_Grafico\"], hide:[\"Device_Data_Tabela\"] }};\n    /*\n    Transforma o vetor do banco em dados para o gráfico\n    */\n    var chart = [{\n        \"series\":[selectedSensor],\n        \"data\":[],\n        \"labels\":[selectedSensor]\n    }];\n    \n    /*\n    estranho? mas é assim mesmo\n    inicializa o elemento 0, do vetor data,\n    que esta dentro do elemento 0 do vetor chart,\n    com um vetor vazio\n    */\n    chart[0].data[0] = [];\n    msg2.payload=chart;\n    for(i=0; i<sensorData.length; i++)\n        msg2.payload[0].data[0].push( {\"x\" : sensorData[i].timestamp, \"y\": sensorData[i].valor});\n}\nelse{\n    msg1.payload = {group:{ hide:[\"Device_Data_Grafico\"]} };\n    msg2.payload = [];\n}\nreturn [msg1, msg2];\n","outputs":2,"noerr":0,"x":1504.999912261963,"y":248.33329057693481,"wires":[["7ab3edb2.c5f6a4"],["c6641638.89edd8","c68c7fbe.923d9"]]},{"id":"36c5755.2fee38a","type":"debug","z":"7e83adea.572ee4","name":"Find values","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1504.999912261963,"y":308.3332905769348,"wires":[]},{"id":"a0ffbe4e.afe29","type":"debug","z":"7e83adea.572ee4","name":"Find values 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1279.9998950958252,"y":319.99996519088745,"wires":[]},{"id":"7ab3edb2.c5f6a4","type":"ui_ui_control","z":"7e83adea.572ee4","name":"","x":1754.999912261963,"y":228.33329057693481,"wires":[[]]},{"id":"c6641638.89edd8","type":"debug","z":"7e83adea.572ee4","name":"Chart vals","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1751.6666069030762,"y":324.99993896484375,"wires":[]},{"id":"e6846eb4.c1125","type":"link in","z":"7e83adea.572ee4","name":"","links":["7a5a10d7.e5cdc","e36ab208.b1a0a"],"x":1329.999912261963,"y":168.33329057693481,"wires":[["c94b37d3.8d72e8","1983f4ec.a30a4b"]]},{"id":"c94b37d3.8d72e8","type":"function","z":"7e83adea.572ee4","name":"Update Real Time","func":"/*\ntesta se a mensagem POST de dados recebida\nfoi para o sensor que está sendo visualizado\ncaso positivo, atualiza o gráfico em tempo\nreal\n*/\n\nselectedSensor = flow.get(\"seletectSensor\");\nselectedDevice = global.get(\"selectedDev\");\n\nnode.log(\"selected dev \" + selectedDevice)\nnode.log(\"selected sensor \" + selectedSensor)\n\ntokenMsg = {};\n\nif( !msg.payload.hasOwnProperty(\"deviceToken\") )\n{\n    if(msg.hasOwnProperty(\"query\"))\n    {\n        tokenMsg = msg.query.deviceToken;\n    }\n}\nelse\n{\n    tokenMsg = msg.payload.deviceToken;\n}\n\n\nif(tokenMsg == selectedDevice.deviceToken &&\n  msg.payload[\"$push\"].hasOwnProperty(selectedSensor) ){\n\n    /*exibe o gráfico, senão estiver sendo exibido*/\n    msg1={};\n    msg1.payload = {group:{ show:[\"Device_Data_Grafico\"]} };\n    \n    \n    /*cria a mensagem de atualizacao do gráfico*/\n  \n    time = msg.payload[\"$push\"][selectedSensor].timestamp;\n    \n    msg2={topic:selectedSensor, label:selectedSensor, timestamp:time, payload:msg.payload[\"$push\"][selectedSensor].valor}\n\n    \n    return [msg1, msg2];\n}\n\nreturn msg;\n","outputs":2,"noerr":0,"x":1484.999912261963,"y":168.33329057693481,"wires":[["7ab3edb2.c5f6a4"],["c68c7fbe.923d9","720b90bc.17b08"]]},{"id":"720b90bc.17b08","type":"debug","z":"7e83adea.572ee4","name":"RT update","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1744.999912261963,"y":128.33329057693481,"wires":[]},{"id":"d1253cd4.fa66c","type":"ui_button","z":"7e83adea.572ee4","name":"","group":"5b8c848f.6cd91c","order":1,"width":0,"height":0,"passthru":false,"label":"Back to Device Manager","tooltip":"Back to Device Manager","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","x":310,"y":720,"wires":[["9c2e329f.0b7f3"]]},{"id":"258b143.ea405ec","type":"ui_ui_control","z":"7e83adea.572ee4","name":"","x":760,"y":720,"wires":[[]]},{"id":"9c2e329f.0b7f3","type":"function","z":"7e83adea.572ee4","name":"Go to Device Manager","func":"\n/*\nretorna para a tela de login quando a aba\nlog-out é clicada\n*/\n\nmsg.payload = {tab:\"Device Manager\",\n               group:{hide:[\"Device_Data_Grafico\"]}\n              }\n\n\nreturn msg;\n","outputs":1,"noerr":0,"x":560,"y":720,"wires":[["258b143.ea405ec","cf6a20a2.6a6ea"]]},{"id":"cf6a20a2.6a6ea","type":"link out","z":"7e83adea.572ee4","name":"","links":[],"x":715,"y":800,"wires":[]},{"id":"4e93ae3c.60977","type":"inject","z":"7e83adea.572ee4","name":"setup","topic":"","payload":"setup","payloadType":"str","repeat":"","crontab":"","once":true,"onceDelay":"0.5","x":155,"y":73.33333778381348,"wires":[["188095f9.6518fa"]]},{"id":"188095f9.6518fa","type":"function","z":"7e83adea.572ee4","name":"UI Setup","func":"\n/* inicia a tela com o Device Information sem aparecer */\nmsg.payload = {\n               group:{ hide:[\"Device_Data_Grafico\", \"Device_Data_Tabela\"]}\n              }\n/*muda a tela para a tela \"Device Manager\"*/\nif (msg.payload != \"setup\")\n    global.set(\"screen\", \"Device Data\")\n\nreturn msg;","outputs":1,"noerr":0,"x":165,"y":133.33333778381348,"wires":[["76fdde5c.af0fd"]]},{"id":"74dd1007.c2d87","type":"link in","z":"7e83adea.572ee4","name":"Device Data Ui Setup","links":[],"x":20,"y":133.33333778381348,"wires":[["188095f9.6518fa"]]},{"id":"1983f4ec.a30a4b","type":"debug","z":"7e83adea.572ee4","name":"RT update 2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1503.333164215088,"y":116.66661500930786,"wires":[]},{"id":"95df926.c31ea7","type":"switch","z":"7e83adea.572ee4","name":"","property":"payload.view","propertyType":"msg","rules":[{"t":"eq","v":"graph","vt":"str"},{"t":"eq","v":"table","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":897.2206039428711,"y":326.7234592437744,"wires":[["2dce755f.91edca"],["8a5aa380.849a5","5b63e6c.b810818"]]},{"id":"8d923931.462108","type":"mongodb in","z":"7e83adea.572ee4","mongodb":"8f5cdd6d.e744d","name":"find data","collection":"dados","operation":"find","x":1308.35693359375,"y":454.1003723144531,"wires":[["ab2a335a.1a2a2","738984a6.7e804c"]]},{"id":"8a5aa380.849a5","type":"function","z":"7e83adea.572ee4","name":"Device Data?","func":"\n/*\n    para retornar todos os dados relacionados a um sensor\n    usamos o device token e selecionamos o campo\n    que queremos que o banco retorne.\n    EX: db.dados.find({deviceToken :\"token\"}, {sensor:1})\n    \n    No caso de um array, se quremos que o banco retorne\n    apenas alguns elmentos do array de dados do sensor\n    fazemos\n    EX: \n    db.dados.find({deviceToken :\"token\"}, {sensor: {$slice : 20}}) //20 primeiros\n    db.dados.find({deviceToken :\"token\"}, {sensor: {$slice : -20}}) //20 ultimos\n    db.dados.find({deviceToken :\"token\"}, {sensor: {$slice : [20, 20]}}) //janela de 20 elementos, ignorando os 20 primeiros\n    \n*/\nsensor = msg.payload.sensor;\nflow.set(\"seletectSensor\", sensor);\n\nselectedDev = global.get(\"selectedDev\");\n\nmsg.payload = {};\nmsg.payload.deviceToken = selectedDev.deviceToken;\n\n// usado para filtrar o resultado\nmsg.projection = {};\n// remove todos os outros sensores da query\nfor (i =0; i<selectedDev.sensores.length; i++)\n    msg.projection[selectedDev.sensores[i]] = 0;\n// filtra apenas o sensor especifico\nmsg.projection[sensor] = {};\n\n// limita o tamanho do vetor de dados\nmsg.projection[sensor][\"$slice\"] = 50;\n\nreturn msg;","outputs":1,"noerr":0,"x":1103.357006072998,"y":453.76704263687134,"wires":[["8d923931.462108","dc4a9ab.c11f868"]]},{"id":"ab2a335a.1a2a2","type":"function","z":"7e83adea.572ee4","name":"Create Table","func":"selectedSensor = flow.get(\"seletectSensor\");\nsensorData = msg.payload[0][selectedSensor]\n\nmsg1 = {};\nmsg2 = {};\nmsg2.payload = {};\nmsg2.payload.sensor = selectedSensor;\nmsg2.payload[selectedSensor] = sensorData;\n\nif(sensorData.length > 1)\n{\n    /*exibe o gráfico*/\n    msg1.payload = {group:{ show:[\"Device_Data_Tabela\"], hide:[\"Device_Data_Grafico\"] }};\n}\nelse\n{\n    msg1.payload = {group:{ hide:[\"Device_Data_Tabela\"]} };\n    //msg2.payload = [];\n}\n\nreturn [msg1, msg2];\n","outputs":2,"noerr":0,"x":1498.35693359375,"y":454.1003723144531,"wires":[["dbdad8a0.3bcee8"],["280a530a.2c166c","ddf85a5c.b46628"]]},{"id":"738984a6.7e804c","type":"debug","z":"7e83adea.572ee4","name":"Find values","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1498.35693359375,"y":514.1003723144531,"wires":[]},{"id":"dc4a9ab.c11f868","type":"debug","z":"7e83adea.572ee4","name":"Find values 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1273.3569164276123,"y":525.7670469284058,"wires":[]},{"id":"27aa31b3.599e7e","type":"ui_template","z":"7e83adea.572ee4","group":"12df0332.cb2bcd","name":"","order":0,"width":0,"height":0,"format":"<style>\n    {{msg.style}}\n</style>\n\n<table>\n  <tr ng-repeat=\"obj in msg.payload[msg.payload.sensor]\">\n    <td>{{ obj.timestamp }}</td>\n    <td>{{ obj.valor }}</td>\n  </tr>\n</table>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":1887.3810501098633,"y":475.8096103668213,"wires":[[]]},{"id":"5b63e6c.b810818","type":"debug","z":"7e83adea.572ee4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":1124.0340532958508,"y":382.3910598754883,"wires":[]},{"id":"280a530a.2c166c","type":"debug","z":"7e83adea.572ee4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":1742.3671798706055,"y":527.4004287719727,"wires":[]},{"id":"dbdad8a0.3bcee8","type":"ui_ui_control","z":"7e83adea.572ee4","name":"","x":1727.7508239746094,"y":423.342791557312,"wires":[[]]},{"id":"ddf85a5c.b46628","type":"template","z":"7e83adea.572ee4","name":"css","field":"style","fieldType":"msg","format":"html","syntax":"mustache","template":"table {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n    text-align: center;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n/* Hover cell effect! */","x":1719.41743850708,"y":476.0094184875488,"wires":[["27aa31b3.599e7e"]]},{"id":"5b8c848f.6cd91c","type":"ui_group","z":"","name":"Device Sensors","tab":"b235b9c8.30a318","order":1,"disp":true,"width":"8","collapse":false},{"id":"8f5cdd6d.e744d","type":"mongodb","z":"","hostname":"127.0.0.1","port":"27017","db":"iotmiddleware","name":""},{"id":"de982014.b18f5","type":"ui_group","z":"","name":"Grafico","tab":"b235b9c8.30a318","order":2,"disp":true,"width":"6","collapse":false},{"id":"12df0332.cb2bcd","type":"ui_group","z":"","name":"Tabela","tab":"b235b9c8.30a318","order":2,"disp":true,"width":"12","collapse":false},{"id":"b235b9c8.30a318","type":"ui_tab","z":"","name":"Device Data","icon":"dashboard","order":3,"disabled":false,"hidden":true}]
